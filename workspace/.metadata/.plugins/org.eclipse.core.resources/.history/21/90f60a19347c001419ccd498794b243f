package me.p2p;

import java.io.BufferedReader;
import java.io.IOException;

public class CommandHandler {
	public interface RunExt extends Runnable {
		@Override
		public void run();
	}
	
	static final String TAG = "CommandHandler";
	BufferedReader bufferedReader;
	String command = null;
	boolean inMessage = false;
	
	public interface ICommand {
		public void onCommand(String command);
	}
	
	ICommand startSession;
	ICommand endSession;
	ICommand startMsg;
	ICommand endMsg;
	ICommand inMsg;
	
	public CommandHandler(BufferedReader br) {
		this.bufferedReader = br;
		this.command = null;
	}

	public void setStartSession(ICommand startSession) {
		this.startSession = startSession;
	}

	public void setEndSession(Runnable runnable) {
		this.endSession = runnable;
	}

	public void setStartMsg(Runnable runnable) {
		this.startMsg = runnable;
	}

	public void setEndMsg(Runnable runnable) {
		this.endMsg = runnable;
	}

	public void setInMsg(Runnable runnable) {
		this.inMsg = runnable;
	}

	public void processCommand() {
		while (true) {
			// handle request, read data;
			try {
				command = bufferedReader.readLine();
				System.out.println("Client Command: " + command);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			if (command != null) {
				if (command.equals(MsgProtocol.START_SESSION_MSG)) {
					System.out.println(TAG + ": Start Session");
					startMsg.run();
				} else {
					if (command.equals(MsgProtocol.END_SESSION_MSG)) {
						System.out.println(TAG + ": Exit Session");
						endSession.run();

						break;
					} else {
						if (command.equals(MsgProtocol.START_MSG)) {
							// bat dau doc data, chuan bi doi de chua;
							System.out.println(TAG + ": Start Command");

							inMessage = true;
							inMsg.run();
						} else {
							if (command.equals(MsgProtocol.END_MSG)) {
								// ket thuc doc data;
								System.out.println(TAG + ": End Command");
								// change state of message handler;
								inMessage = false;
								
								// end msg;
								endMsg.run();
							} else {
								if (inMessage) {
									// gọi trường hợp in message;
									System.out.println(TAG + ": In Message: Append Data");
									inMsg.run();
								} else {
									System.out.println(TAG
											+ ": Not In Message: Skip");
								}
							}
						}
					}
				}
			} else {
				System.out.println(TAG + ": client command is null");
			}
		}
	}
}
